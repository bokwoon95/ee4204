#!/bin/bash

# gcc convenient, with warnings
# This script will compile your .c file and run it for you with the provided arguments
# Instead of
#    gcc -g -std=c99 -Wall -Werror file.c -o file.out
#    ./file.out [arguments...]
# You can run
#    ./ccc file.c [arguments...]
if [ $# -gt 0 ]; then
  CFILE="$(echo $1 | perl -pe "s:^(.+)\.c$:\1:")"
  shift; CARGS="$@"
  if [ "$CFILE" = "" ]; then
    echo "That's not a .c file"
    exit 1
  fi
  if gcc -g -std=c99 -Wall -Werror "$CFILE.c" -o "$CFILE.out"; then
    eval "./$CFILE.out $CARGS"
  elif gcc -g -std=c99 -Wall "$CFILE.c" -o "$CFILE.out"; then
    echo "warning present, continue? y/n (leave blank for \"y\")"
    read CONTINUE
    if [ "$CONTINUE" = "" -o "$CONTINUE" = "y" ]; then
      eval "./$CFILE.out $CARGS"
    fi
  fi
fi
